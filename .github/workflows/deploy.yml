name: Build and Push Docker Image and Deploy to self hosted kubernetes cluster

on:
  push:
    branches:
      - master

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    env:
      ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
      AWS_REGION: ${{ secrets.AWS_REGION }}
      IMAGE_TAG: ${{ github.sha }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build and Push Docker image
        run: |
          docker build -t ${{ secrets.ECR_REPOSITORY }}/dataprocessingapp:${{ env.IMAGE_TAG }} -t ${{ secrets.ECR_REPOSITORY }}/dataprocessingapp:latest .
          docker push ${{ secrets.ECR_REPOSITORY }}/dataprocessingapp:${{ env.IMAGE_TAG }}
          docker push ${{ secrets.ECR_REPOSITORY }}/dataprocessingapp:latest
      
      # - name: Deploy to EKS
      #   run: |
      #     aws eks update-kubeconfig --region ${{ secrets.AWS_REGION }} --name ${{ secrets.EKS_CLUSTER_NAME }}
      #     kubectl apply -f kubernets/manifest/namespace.yaml --validate=false
      #     kubectl delete -f kubernets/manifest/deployment.yaml --ignore-not-found=true
      #     kubectl apply -f kubernets/manifest/deployment.yaml --validate=false
      #     kubectl apply -f kubernets/manifest/service.yaml --validate=false
      
      # - name: Get EKS Service Info
      #   run: |
      #     kubectl get svc -n data-processing